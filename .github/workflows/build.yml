name: Build
on:
  push:
    tags:
      - 'v*'
      - 'ci-test-*'
jobs:
  create_github_release:
    name: Create a release object in Github
    runs-on: ubuntu-latest
    steps:
    - uses: Roang-zero1/github-create-release-action@master
      with:
        version_regex: ^v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+
        prerelease_regex:  ^v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+-ci-test
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  custom_release:
    needs:
      - create_github_release
    name: Build via custom flow
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: install gitman
        run: pipx install gitman
      - uses: actions/cache@v1
        with:
          path: ExternalLibs
          key: gitman-${{ hashFiles('.gitman.yml') }}
          restore-keys: |
            gitman-${{ hashFiles('.gitman.yml') }}
      - name: install dependencies
        run: gitman install
      - name: mkdir
        run: mkdir ClassicLootManager
      - name: Prepare sources
        run: mv `ls | grep -v '^ClassicLootManager$'` ClassicLootManager
      - name: Pack
        run: zip -r ClassicLootManager.zip ClassicLootManager -x '*.git*'
      - name: Upload artifact to github
        uses: fnkr/github-action-ghr@v1
        env:
          GHR_PATH: ClassicLootManager.zip
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  bigwigs_release:
    needs:
      - create_github_release
    name: Build via BigWigs packager
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: install gitman
        run: pipx install gitman
      - name: install dependencies
        run: gitman install
      - name: Bigwigs packager
        uses: BigWigsMods/packager@master
        with:
          args: "-d -e -u"
      - name: Get name of zip file
        run: echo "artifact=`basename .release/*.zip`" >> $GITHUB_ENV
      - name: Upload artifact to github
        uses: fnkr/github-action-ghr@v1
        env:
          GHR_PATH: ./release/${{ env.artifact }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
